import ddf.minim.analysis.*;
import ddf.minim.*;
AudioPlayer player;

int BUFSIZE = 300;

Minim minim;
FFT fft; 

void setup() {

 size(800, 800,P3D);


 minim = new Minim(this);
 player = minim.loadFile("467.mp3", 512);

 fft = new FFT(player.bufferSize(), player.sampleRate());

 fft.window(FFT.HAMMING);

 colorMode(HSB, 200, 100, 100, 60);
 noStroke();
}

void draw() {

 background(0);
 lights();

 fft.forward(player.mix);

 for (int i = 0; i < fft.specSize(); i+=4) {

  float h = map(i, 0, fft.specSize(),0 , 150);

  float alfafill = map(fft.getBand(i)*40, 0, BUFSIZE-100, 0,255);

  float x = map(i, 0, fft.specSize(), 0, 300);

  fill(h,80,80,alfafill);
  
  pushMatrix();
  translate( width/2, height/2, 10);
  sphere(x);
  popMatrix();

  }
}

void mousePressed() {
 player.rewind();
 player.play();
 player.loop();
}

void stop() {
 player.close();
 minim.stop();
 super.stop();
}
